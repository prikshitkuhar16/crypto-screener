{"ast":null,"code":"var _jsxFileName = \"G:\\\\WebD\\\\CryptoBucks-Final-Code\\\\src\\\\context\\\\CryptoContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useLayoutEffect, useState } from \"react\";\n\n// create context object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CryptoContext = /*#__PURE__*/createContext({});\n\n// create the provider component\nexport const CryptoProvider = ({\n  children\n}) => {\n  _s();\n  const [cryptoData, setCryptoData] = useState();\n  const [searchData, setSearchData] = useState();\n  const [coinData, setCoinData] = useState();\n  const [coinSearch, setCoinSearch] = useState(\"\");\n  const [currency, setCurrency] = useState(\"usd\");\n  const [sortBy, setSortBy] = useState(\"market_cap_desc\");\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(250);\n  const [perPage, setPerPage] = useState(10);\n  const [error, setError] = useState({\n    data: \"\",\n    coinData: \"\",\n    search: \"\"\n  });\n  // there can be 3 errors that we can catch from all three functions, also send the error state \n  // through value prop\n\n  const getCryptoData = async () => {\n    //here we will set an empty string for the data error\n    setError({\n      ...error,\n      data: \"\"\n    });\n    setCryptoData();\n    setTotalPages(13220);\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${coinSearch}&order=${sortBy}&per_page=${perPage}&page=${page}&sparkline=false&price_change_percentage=1h%2C24h%2C7d`).then(async res => {\n        if (res.ok) {\n          return res.json();\n        }\n        let errorResponse = await res.json();\n        // here we might get the error so it is best to handle it and throw the error\n        // console.log(errorResponse);\n        setError({\n          ...error,\n          data: errorResponse.error\n        });\n        throw new Error(errorResponse.error);\n      }).then(json => json);\n\n      // console.log(data);\n      setCryptoData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getCoinData = async coinid => {\n    setCoinData();\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/coins/${coinid}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=true&sparkline=false`).then(res => res.json()).then(json => json);\n\n      // console.log(\"CoinData\", data);\n      setCoinData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSearchResult = async query => {\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/search?query=${query}`).then(res => res.json()).then(json => json);\n\n      // console.log(data);\n      setSearchData(data.coins);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const resetFunction = () => {\n    setPage(1);\n    setCoinSearch(\"\");\n  };\n  useLayoutEffect(() => {\n    getCryptoData();\n  }, [coinSearch, currency, sortBy, page, perPage]);\n  return /*#__PURE__*/_jsxDEV(CryptoContext.Provider, {\n    value: {\n      cryptoData,\n      searchData,\n      getSearchResult,\n      setCoinSearch,\n      setSearchData,\n      currency,\n      setCurrency,\n      sortBy,\n      setSortBy,\n      page,\n      setPage,\n      totalPages,\n      resetFunction,\n      setPerPage,\n      perPage,\n      getCoinData,\n      coinData,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoProvider, \"894EjH9Zc8Iqi+yhoEExva2x9MM=\");\n_c = CryptoProvider;\nvar _c;\n$RefreshReg$(_c, \"CryptoProvider\");","map":{"version":3,"names":["createContext","useLayoutEffect","useState","jsxDEV","_jsxDEV","CryptoContext","CryptoProvider","children","_s","cryptoData","setCryptoData","searchData","setSearchData","coinData","setCoinData","coinSearch","setCoinSearch","currency","setCurrency","sortBy","setSortBy","page","setPage","totalPages","setTotalPages","perPage","setPerPage","error","setError","data","search","getCryptoData","fetch","then","res","ok","json","errorResponse","Error","console","log","getCoinData","coinid","getSearchResult","query","coins","resetFunction","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/WebD/CryptoBucks-Final-Code/src/context/CryptoContext.js"],"sourcesContent":["import { createContext, useLayoutEffect, useState } from \"react\";\r\n\r\n// create context object\r\nexport const CryptoContext = createContext({});\r\n\r\n// create the provider component\r\nexport const CryptoProvider = ({ children }) => {\r\n  const [cryptoData, setCryptoData] = useState();\r\n  const [searchData, setSearchData] = useState();\r\n  const [coinData, setCoinData] = useState();\r\n\r\n  const [coinSearch, setCoinSearch] = useState(\"\");\r\n\r\n  const [currency, setCurrency] = useState(\"usd\");\r\n  const [sortBy, setSortBy] = useState(\"market_cap_desc\");\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(250);\r\n  const [perPage, setPerPage] = useState(10);\r\n\r\n  const [error, setError] = useState({ data: \"\", coinData: \"\", search: \"\" });\r\n// there can be 3 errors that we can catch from all three functions, also send the error state \r\n// through value prop\r\n\r\n  const getCryptoData = async () => {\r\n    //here we will set an empty string for the data error\r\n    setError({ ...error, data: \"\" });\r\n    setCryptoData();\r\n    setTotalPages(13220);\r\n\r\n    try {\r\n      const data = await fetch(\r\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${coinSearch}&order=${sortBy}&per_page=${perPage}&page=${page}&sparkline=false&price_change_percentage=1h%2C24h%2C7d`\r\n      ).then(async (res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        let errorResponse = await res.json();\r\n        // here we might get the error so it is best to handle it and throw the error\r\n        // console.log(errorResponse);\r\n        setError({ ...error, data: errorResponse.error });\r\n        throw new Error(errorResponse.error);\r\n      }).then((json) => json);\r\n\r\n      // console.log(data);\r\n      setCryptoData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCoinData = async (coinid) => {\r\n    setCoinData();\r\n    try {\r\n      const data = await fetch(\r\n        `https://api.coingecko.com/api/v3/coins/${coinid}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=true&sparkline=false`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((json) => json);\r\n\r\n      // console.log(\"CoinData\", data);\r\n      setCoinData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearchResult = async (query) => {\r\n    try {\r\n      const data = await fetch(\r\n        `https://api.coingecko.com/api/v3/search?query=${query}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((json) => json);\r\n\r\n      // console.log(data);\r\n      setSearchData(data.coins);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetFunction = () => {\r\n    setPage(1);\r\n    setCoinSearch(\"\");\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    getCryptoData();\r\n  }, [coinSearch, currency, sortBy, page, perPage]);\r\n\r\n  return (\r\n    <CryptoContext.Provider\r\n      value={{\r\n        cryptoData,\r\n        searchData,\r\n        getSearchResult,\r\n        setCoinSearch,\r\n        setSearchData,\r\n        currency,\r\n        setCurrency,\r\n        sortBy,\r\n        setSortBy,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n        resetFunction,\r\n        setPerPage,\r\n        perPage,\r\n        getCoinData,\r\n        coinData,\r\n        error\r\n      }}\r\n    >\r\n      {children}\r\n    </CryptoContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}